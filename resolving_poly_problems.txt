F<a>:=ext< FiniteField(2) | 2 >;
R<x>:=PolynomialRing(F);
f1:=(x-1)*(x-a)*(x^3-a); 
a1:= MonomialCoefficient(f1, 1); 
n1:=Degree(f1);  
V1:=VectorSpace(F,n1);
"f1=",f1;

f1f:= Factorization(R!f1); f1f;

g1:= R!f1f[3][1];  "g1=",g1; // set ith factor of f1 as g1 
g1s:= ElementToSequence(g1) cat [0:x in [1..n1-1-Degree(g1)]]; 

h1:= R!(f1/g1); "h1=",h1;
h1s:= ElementToSequence(h1) cat [0:x in [1..n1-1-Degree(h1)]]; 

T1:= CompanionMatrix(f1); T1;

// Tek parçalı PC
G1:=Matrix(F,n1,n1,[]);
G1[1]:=V1!g1s;
for i in [1..n1-1] do
G1[i+1]:=(V1!([G1[i,j]: j in [1..n1]]))*T1;
end for;
"G1=",G1;


H1:=Matrix(F,n1,n1,[]);
H1[1]:=V1!h1s;
for i in [1..n1-Degree(h1)-1] do
H1[i+1]:=V1!Transpose((T1^-1)*Matrix(F,n1,1,[H1[i,j]: j in [1..n1]]));
end for;
"H1=",H1;
